Index: mold/src/input-files.cc
===================================================================
--- mold.orig/src/input-files.cc
+++ mold/src/input-files.cc
@@ -860,22 +860,27 @@ void ObjectFile<E>::parse(Context<E> &ct
 //
 //  1. Strong defined symbol
 //  2. Weak defined symbol
-//  3. Strong defined symbol in a DSO/archive
-//  4. Weak Defined symbol in a DSO/archive
+//  3. Strong defined symbol in an archive
+//  4. Weak Defined symbol in an archive
 //  5. Common symbol
 //  6. Common symbol in an archive
-//  7. Unclaimed (nonexistent) symbol
+//  7. Strong defined symbol in a DSO
+//  8. Weak Defined symbol in a DSO
+//  9. Unclaimed (nonexistent) symbol
 //
 // Ties are broken by file priority.
 template <typename E>
 static u64 get_rank(InputFile<E> *file, const ElfSym<E> &esym, bool is_in_archive) {
   auto get_sym_rank = [&] {
+    if (file->is_dso)
+      return (esym.st_bind == STB_WEAK) ? 8 : 7;
+
     if (esym.is_common()) {
       assert(!file->is_dso);
       return is_in_archive ? 6 : 5;
     }
 
-    if (file->is_dso || is_in_archive)
+    if (is_in_archive)
       return (esym.st_bind == STB_WEAK) ? 4 : 3;
 
     if (esym.st_bind == STB_WEAK)
@@ -889,7 +894,7 @@ static u64 get_rank(InputFile<E> *file,
 template <typename E>
 static u64 get_rank(const Symbol<E> &sym) {
   if (!sym.file)
-    return 7 << 24;
+    return 9 << 24;
   return get_rank(sym.file, sym.esym(), !sym.file->is_alive);
 }
 
Index: mold/test/link-order.sh
===================================================================
--- mold.orig/test/link-order.sh
+++ mold/test/link-order.sh
@@ -16,7 +16,7 @@ int main() {
 EOF
 
 $CC -B. -o $t/exe $t/b.o -Wl,--as-needed $t/libfoo.so $t/libfoo.a
-readelf --dynamic $t/exe | grep -q libfoo
+! readelf --dynamic $t/exe | grep -q libfoo || false
 
 $CC -B. -o $t/exe $t/b.o -Wl,--as-needed $t/libfoo.a $t/libfoo.so
 ! readelf --dynamic $t/exe | grep -q libfoo || false
